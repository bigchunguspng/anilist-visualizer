@using AniListVisualizer.Services
@model UserViewModel

@{
    ViewBag.Title = Model.User.name;
    Layout = "_Layout";
    var list = Model.History
        .Where(x => x.status is EntryStatus.COMPLETED or EntryStatus.CURRENT or EntryStatus.PAUSED && x.watching_start.year is not null)
        .OrderBy(x => x.watching_start.GetDateTime())
        .ThenBy(x => x.watching_end.GetDateTime())
        .ToList();
    var min = list.Min(a => a.watching_start.GetDateTime());
    var max = list.Max(a => a.watching_end  .GetDateTime());
    var length = (int)(max - min).TotalDays;
}

<div class="user-info">
    <a href="https://anilist.co/user/@Model.User.name">
        <img class="user-pfp" src="@Model.User.avatar["medium"]" height="64px" alt="…"/>
    </a>
    <h1>@ViewBag.Title</h1>
</div>

<table>
    <tbody>
    @{
        var years = Enumerable.Range(min.Year, max.Year - min.Year + 1).ToList();
        var divs = new List<TimelineYear>(years.Count);
        var accumulated = 0;
        foreach (var year in years)
        {
            var days = year == min.Year ? (int)(new DateTime(year, 12, 31) - min).TotalDays : DateTime.IsLeapYear(year) ? 366 : 365;
            var margin = $"{accumulated}px";
            var width = $"{days}px";
            accumulated += days;
            divs.Add(new TimelineYear(year, margin, width));
        }
    }
    @foreach (var item in list)
    {
        <tr>
            <td>
                @{ var path = $"{item.media.type.ToString().ToLower()}/{item.media.id}"; }
                <a href="https://anilist.co/@path">
                    <img class="title-cover" src="@item.media.coverImage["medium"]" height="32px" alt="…"/>
                </a>
            </td>
            @{ var title = item.media.title["english"] ?? item.media.title["romaji"]; }
            @if (item.status is EntryStatus.CURRENT or EntryStatus.REPEATING)
            {
                <td><b> @title </b></td>
            }
            else
            {
                <td> @title </td>
            }
            <td>
                @{
                    var start = item.watching_start;
                    var end   = item.watching_end;
                    var sd = start.GetDateTime();
                    var ed =   end.GetDateTime();
                    var right = (int)(sd - min).TotalDays;
                    var left = end.year is null ? 0 : (int)(max - ed).TotalDays;
                    var margin = $"0 {left}px 0 {right}px";
                    var text = sd == ed ? start.ToString() : $"{start} - {end}";
                    var width = $"{length}px";
                    var color = item.media.coverImage["color"] ?? "#00a8fe";
                }
                <div class="timeline-row" style="width: @width;">
                    @foreach (var x in divs)
                    {
                        <div class="timeline-year" style="margin-left: @x.MarginLeft; width: @x.Width;">@x.Year</div>
                    }
                    <div class="timeline-item" title="@text" style="margin: @margin; background-color: @color;">
                        @*<div class="on-hover">...</div>*@
                    </div>
                </div>
            </td>
        </tr>
    }
    </tbody>
</table>
